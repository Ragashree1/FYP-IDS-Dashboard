## Files

- `simulate_attack.py`: Python script using Scapy to simulate:
  - ICMP flood
  - TCP SYN scan
  - UDP flood to common service ports
  - Fake HTTP SYN flood

- `local.rules`: Custom Snort 3 rules that detect the above attacks.

## Usage

### 1. Setup Snort 3

Make sure Snort 3 is installed and configured properly.

Update your `snort.lua`:

```
ips =
{
    rules = [[
        include /etc/snort/rules/local.rules
    ]],
}
```

### 2. Add Rules

Place `local.rules` in your rules directory (usually `/etc/snort/rules/`).

### 3. Start Snort

```bash
sudo snort -c /etc/snort/snort.lua -i <interface> -A alert_fast
```

### 4. Run Attack Simulation

```bash
sudo python3 simulate_attack.py <victim_ip>
```

1. Install Dependencies:
pip install scapy
You may need to run as root: sudo python3 simulate_attack.py <victim_ip>

2. Run Snort (if not already running):
sudo snort -i <interface> -A console -c /etc/snort/snort.conf

3. Run the Script:
sudo python3 simulate_attack.py 192.168.1.101

For local.rules in snort 3, ensure these rules are included: 
# ---------------------
# Local Rules for Snort 3
# ---------------------

# 1. ICMP Echo Request (Ping Flood)
alert icmp any any -> any any (msg:"[Local] ICMP Echo Request Detected"; itype:8; sid:1000001; rev:1;)

# 2. TCP SYN Scan (SYN packet without ACK)
alert tcp any any -> any any (msg:"[Local] TCP SYN Scan Detected"; flags:S; threshold:type threshold, track by_src, count 10, seconds 10; sid:1000002; rev:1;)

# 3. UDP Probe (Common ports)
alert udp any any -> any [53,123,161] (msg:"[Local] UDP Packet to Suspicious Port (DNS/NTP/SNMP)"; sid:1000003; rev:1;)

# 4. TCP Connection to Port 80 (Fake HTTP GET SYN)
alert tcp any any -> any 80 (msg:"[Local] Possible HTTP SYN Flood"; flags:S; sid:1000004; rev:1;)

# 5. TCP Null Scan (no flags set)
alert tcp any any -> any any (msg:"[Local] TCP NULL Scan"; flags:0; sid:1000005; rev:1;)

