Step 1: User Adds Malicious IPs via the ProjectWebsite UI.
The website allows users to:

- View the current blocklist.
- Add new malicious IPs.
- Remove mistakenly blocked IPs.

IP-Blocking APIs:

GET /ip-blocking/blocked-ips/

Response:
{ "blocked_ips": ["203.0.113.45", "175.156.68.171"] }
Add an IP to the Blocklist

POST /ip-blocking/block-ip/
Example Request:
{ "ip": "192.168.1.100", "reason": "Malicious activity detected" }

Response:
{ "message": "IP Blocked Successfully", "ip": "192.168.1.100", "reason": "Malicious activity detected" }

Unblock an IP
DELETE /ip-blocking/unblock-ip/{ip}

Example:
DELETE /ip-blocking/unblock-ip/192.168.1.100
Once a user adds an IP, it gets stored in PostgreSQL and fetched by the firewall script.

Step 2: 
Firewall Script on the client system fetches Blocked IPs & Updates client iptables
A cron job runs the script (update_firewall.sh) that:

Fetches blocked IPs from the API.
Updates client system iptables rules to drop traffic from the blocked IPs.
Ensures the firewall rules persist after a system reboot.

Step 2.1 : Create update_firewall.sh script
Place the script in /usr/local/bin/update_firewall.sh and make it executable using:
sudo chmod +x /usr/local/bin/update_firewall.sh

Step 3: Automate Firewall Updates with a Cron Job
The client needs to run the script automatically every few minutes. This can be achieved using a Cron Job

Edit crontab:
sudo crontab -e
Add this line to run the script every 5 minutes:
*/5 * * * * /usr/local/bin/update_firewall.sh
OR to run the script every minute :
* * * * * /usr/local/bin/update_firewall.sh
Save and exit.
Verify cron is working:
sudo grep CRON /var/log/syslog
Now, the clientâ€™s server will update its firewall rules every 5 minutes or 1 minute.

Next, Run the Script Manually using:
sudo /usr/local/bin/update_firewall.sh

Then, Verify That the IPs Are Blocked using: 
sudo iptables -L BLOCKLIST -v -n

We should be able to view the current list of blocked ip addresses, and this should match the list of ip addresses in the database.

Step 4: Make iptables Rules Persistent after reboot
Since iptables rules reset after a reboot, you must save them and restore them automatically.

Step 4.1: Save iptables Rules
Manually save your current rules to a file:
sudo iptables-save | sudo tee /etc/iptables.rules > /dev/null

This stores your firewall rules in /etc/iptables.rules

Step 4.2: Restore iptables Rules on Boot
To ensure your rules load automatically on startup, do one of the following:

Option 1: Use rc.local
Open or create /etc/rc.local:
sudo nano /etc/rc.local

Add the following lines into the file:
#!/bin/bash
iptables-restore < /etc/iptables.rules
exit 0

Make /etc/rc.local executable:
sudo chmod +x /etc/rc.local
Now, iptables rules will be restored every time your system boots.

Option 2: Use a systemd Service
If /etc/rc.local does not exist, create a systemd service.

Create a new service file:
sudo nano /etc/systemd/system/iptables-restore.service
Add the following content:
[Unit]
Description=Restore iptables firewall rules
Before=network-pre.target
Wants=network-pre.target

[Service]
Type=oneshot
ExecStart=/sbin/iptables-restore < /etc/iptables.rules
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
Enable and start the service:
sudo systemctl enable iptables-restore
sudo systemctl start iptables-restore
Now, iptables rules will be restored on every reboot.

Step 5: Testing & Verifying the Setup

Step 5.1: Check If the IPs Are Blocked
curl -X GET http://localhost:8000/ip-blocking/blocked-ips/

Step 5.2 : Check If the Firewall Rules Are Applied
sudo iptables -L BLOCKLIST -v -n

Expected output:
Chain BLOCKLIST (0 references)
 pkts bytes target     prot opt in     out     source               destination
    0     0 DROP       all  --  *      *       203.0.113.45         0.0.0.0/0
    0     0 DROP       all  --  *      *       175.156.68.171       0.0.0.0/0

Step 5.3 :Try Pinging a Blocked IP
ping 175.156.68.171
If ping fails, blocking is successfully and malicious attackers are not able to communicate with the client system

Step 6:  How to Remove an IP from the Blocklist
Remove the IP from the database:
curl -X DELETE "http://localhost:8000/ip-blocking/unblock-ip/YOUR_IP_HERE"
Reapply firewall updates:
sudo /usr/local/bin/update_firewall.sh
This will remove the IP from iptables.